---
name: Release Pipeline

on:
  push:
    tags:
      - v*

permissions:
  contents: read
  packages: write

jobs:
  build-and-publish:
    name: Build and Publish Image
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set image tags
        id: image-tags
        run: |
          REGISTRY_BASE="quay.io/rhpds/zt-monitoring"
          VERSION="${{ github.ref_name }}"

          # Parse semantic version (v1.5.7 -> 1, 5, 7)
          if [[ $VERSION =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=${BASH_REMATCH[3]}

            # Create tags: v1.5.7, v1.5, v1, latest
            TAGS="${REGISTRY_BASE}:v${MAJOR}.${MINOR}.${PATCH}"
            TAGS="${TAGS},${REGISTRY_BASE}:v${MAJOR}.${MINOR}"
            TAGS="${TAGS},${REGISTRY_BASE}:v${MAJOR}"
            TAGS="${TAGS},${REGISTRY_BASE}:latest"

            echo "IMAGE_TAGS=${TAGS}" >> $GITHUB_OUTPUT
            echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
            echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          else
            echo "Invalid version format: ${VERSION}. Expected format: v1.2.3"
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to quay.io registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_IO_RHPDS_USERNAME }}
          password: ${{ secrets.QUAY_IO_RHPDS_TOKEN }}

      - name: Build and publish image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          file: ./Containerfile
          push: true
          tags: ${{ steps.image-tags.outputs.IMAGE_TAGS }}
          labels: |
            org.opencontainers.image.title=zt-monitoring
            org.opencontainers.image.description=ZeroTouch Monitoring Service
            org.opencontainers.image.version=${{ steps.image-tags.outputs.VERSION }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.image-tags.outputs.BUILD_DATE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}

      - name: Create release summary
        run: |
          echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "### Published Images" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: quay.io/rhpds/zt-monitoring" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.image-tags.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Digest**: ${{ steps.build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Date**: ${{ steps.image-tags.outputs.BUILD_DATE }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available Tags" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.image-tags.outputs.IMAGE_TAGS }}' | tr ',' '\n' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY